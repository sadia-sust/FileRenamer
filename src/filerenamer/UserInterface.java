package filerenamer;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sadia
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form UserInterface
     */
    public String pathName = "", filetyp = ".*";
    Data info;
    boolean isFilter,isPreview,isRenamed = false;
    FileRenamer process;
    File fileName;
    public  DefaultTableModel model;
    public UserInterface() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        opendir = new javax.swing.JTextField();
        browse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dropdown = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            @Override
            public Class getColumnClass(int column) {

                if (column == 0) {
                    return Boolean.class;
                } else {
                    return String.class;
                }

            }
        }
        ;
        apply = new javax.swing.JButton();
        numberIncrement = new javax.swing.JSpinner();
        letterIncrement = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        insertPrefix = new javax.swing.JTextField();
        ChoosedFileFilter = new javax.swing.JButton();
        preView = new javax.swing.JButton();
        prefix = new javax.swing.JCheckBox();
        suffix = new javax.swing.JCheckBox();
        insertSuffix = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        stepSize = new javax.swing.JSpinner();
        uniqueParameter = new javax.swing.JCheckBox();
        uniqueChoice = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        out = new javax.swing.JMenu();
        Out = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        menu3.setLabel("File");
        menuBar2.add(menu3);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Basic File Renamer by SADIA sust_cse_2012331072");
        setBackground(java.awt.Color.pink);
        setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        setForeground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel1.setText("Choose directory");

        opendir.setEditable(false);

        browse.setText("browse");
        browse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browseMouseClicked(evt);
            }
        });
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        jLabel2.setText("Type of file");

        dropdown.setMaximumRowCount(4);
        dropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ".*", ".mp3", ".mp4", ".docx", ".txt", ".pdf", ".jpg" }));
        dropdown.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dropdownItemStateChanged(evt);
            }
        });
        dropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        jLabel3.setText("Choose Algorithm");

        jLabel4.setText("Start  number/ letter :");

        jTable1.setBackground(new java.awt.Color(0, 0, 102));
        //model.getTableHeader().setFont(new Font("Segoe UI Semibold", Font.PLAIN, 14));
        jTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14))); // NOI18N
        jTable1.setFont(new java.awt.Font("Consolas", Font.BOLD, 14));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "File Name", "New File Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(102, 102, 255));
        jTable1.setRowMargin(4);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(55);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        apply.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        apply.setText("Apply");
        apply.setToolTipText("Apply the changes to the selected files");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        numberIncrement.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        letterIncrement.setModel(new javax.swing.SpinnerListModel(new String[] {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"}));

        jLabel5.setText("Insert text :");

        insertPrefix.setEditable(false);
        insertPrefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPrefixActionPerformed(evt);
            }
        });

        ChoosedFileFilter.setText("Choosed file filter");
        ChoosedFileFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoosedFileFilterActionPerformed(evt);
            }
        });

        preView.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        preView.setText("Preview");
        preView.setToolTipText("Preview the changes");
        preView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preViewActionPerformed(evt);
            }
        });

        prefix.setText("insert-prefix");
        prefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefixActionPerformed(evt);
            }
        });

        suffix.setText("insert-suffix");
        suffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suffixActionPerformed(evt);
            }
        });

        insertSuffix.setEditable(false);

        jLabel6.setText("Step size for number increment");

        stepSize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        uniqueParameter.setText("Unique parameter");

        uniqueChoice.setMaximumRowCount(2);
        uniqueChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "numbers", "letters" }));

        jLabel7.setText("Insert text :");

        out.setText("File");

        Out.setText("Exit");
        out.add(Out);

        jMenuBar2.add(out);
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ChoosedFileFilter))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(opendir, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(browse))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(preView, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(apply, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 66, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prefix)
                            .addComponent(insertPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stepSize, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(numberIncrement, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(letterIncrement, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(uniqueParameter))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(uniqueChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(361, 361, 361))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(155, 155, 155)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(insertSuffix, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(suffix)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(browse))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(opendir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChoosedFileFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(preView, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apply, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suffix)
                    .addComponent(uniqueChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prefix)
                    .addComponent(uniqueParameter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberIncrement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(letterIncrement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertSuffix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stepSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        numberIncrement.setEditor(new JSpinner.DefaultEditor(numberIncrement));
        letterIncrement.setEditor(new JSpinner.DefaultEditor(letterIncrement));
        stepSize.setEditor(new JSpinner.DefaultEditor(stepSize));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OutActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }
    /**
     * User can browse and choose files and directories
     * @param evt 
     */
    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        
        // display file dialog, so user can choose file or directory to open
        JFileChooser fileChose = new JFileChooser();
        fileChose.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        int result = fileChose.showOpenDialog(this);

        // if user clicked Cancel button on dialog, return
        if (result == JFileChooser.CANCEL_OPTION) {
            return;
        }

         fileName = fileChose.getSelectedFile(); // get File

        // display error if invalid
        if ((fileName == null) || (fileName.getName().equals(""))) {
            JOptionPane.showMessageDialog(this, "Invalid Name",
                    "Invalid Name", JOptionPane.ERROR_MESSAGE);
        }
        pathName = fileName.toString();
        isFilter=false;
        isRenamed = false;
        //flag=false;
        this.opendir.setText(pathName);
        info = new Data(this);
        process = new FileRenamer(this);
        
        try
        {
            if(fileName.isFile())
            {
            info.listOne();
            }
            else
            {
                //collect all files in that directory
                info.listAll();
            }
             
             //show all files in that directory
            info.showAllFile();
        }catch(Exception e){
            
        }
       

    }//GEN-LAST:event_browseActionPerformed
    /**
     * shows a dropdown list of file extension
     * user can choose their desired file extension 
     * which file type they want to rename
     * @param evt 
     */
    private void dropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdownActionPerformed
        //get selected item
        filetyp = dropdown.getSelectedItem().toString();
        isFilter = false;
        isRenamed = false;
        //if user chooses all file type then showAllFile method will be called
        //files will be shown to the Jtable
       /* if(fileName.isFile()){
            model.addRow(new Object[] {true,fileName.getName(),null});
        }*/
        if(pathName.equals("")==false){
            if(filetyp==".*"){
            info.showAllFile();
            }    
            else{
            info.specificExtension();
            }
        } 

    }//GEN-LAST:event_dropdownActionPerformed

    private void dropdownItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dropdownItemStateChanged

    }//GEN-LAST:event_dropdownItemStateChanged

    /**
     * to apply action this method will be called when user 
     * clicks apply button
     * @param evt 
     */
    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        isPreview = false;
      
        if (pathName.equals("")) {
            
                JOptionPane.showMessageDialog(this, "Choose Directory", "WARNING !", JOptionPane.WARNING_MESSAGE);
          
        } else {
            if (uniqueParameter.isSelected()) {
                String option;
                option = uniqueChoice.getSelectedItem().toString();
                if(option.equals("numbers")){
                    try {
                   
                   
                    process.setChoice(1);
                    process.start();

                   } catch (Exception e) {

                   }
                }
                else {
                    try {
                    
                 
                    process.setChoice(2);
                    process.start();

                } catch (Exception e) {

                }
                    
                }
            } 
            else  if(prefix.isSelected() && suffix.isSelected()){
                try {
                   
                    process.setChoice(3);
                    process.start();

                } catch (Exception e) {

                }
            }
            else if(prefix.isSelected()){
                try {
                   
                    process.setChoice(4);
                    process.start();

                } catch (Exception e) {

                }
            }
            else if(suffix.isSelected()){
                try {
                   
                    process.setChoice(5);
                    process.start();

                } catch (Exception e) {

                }
            }
        }

    }//GEN-LAST:event_applyActionPerformed

    private void browseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseMouseClicked


    }//GEN-LAST:event_browseMouseClicked
    /**
     * chosen files will be filtered
     * and will be shown in jtable
     * @param evt 
     */
    private void ChoosedFileFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoosedFileFilterActionPerformed
        //info.filteredFile.clear();
        isFilter = true;
        if(pathName.equals("")==false)
        {
            if(isRenamed==false)
            info.filter();
            else
            {
                try
                {
                    process.afterRenamingFilter();
                }catch(Exception e)
                {
                    
                }
              
            }
        }
        
    }//GEN-LAST:event_ChoosedFileFilterActionPerformed
    /**
     * to preview action this method will be called when user 
     * clicks preview button
     * @param evt 
     */
    private void preViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preViewActionPerformed
        // TODO add your handling code here:
        isPreview = true;
      
       
         if (pathName.equals("")) {
           
                JOptionPane.showMessageDialog(this, "Choose Directory", "WARNING !", JOptionPane.WARNING_MESSAGE);
           
        } else {
            if (uniqueParameter.isSelected()) {
                String option;
                option = uniqueChoice.getSelectedItem().toString();
                if(option.equals("numbers")){
                    try {
                   
                  
                      process.setChoice(1);
                    process.start();

                   } catch (Exception e) {

                }
                }
                else {
                    try {
                    
                  
                    process.setChoice(2);
                    process.start();

                } catch (Exception e) {

                }
                    
                }
                
            }
             else  if(prefix.isSelected() && suffix.isSelected()){
                
                try {
                   
                    process.setChoice(3);
                    process.start();

                } catch (Exception e) {

                }
            }
            else if(prefix.isSelected()){
               
                try {
                   
                    process.setChoice(4);
                    process.start();

                } catch (Exception e) {

                }
            }
            else if(suffix.isSelected()){
              
                try {
                   
                    process.setChoice(5);
                    process.start();

                } catch (Exception e) {

                }
            }
            else{
                
                
            }
        }
    }//GEN-LAST:event_preViewActionPerformed

    private void insertPrefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPrefixActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_insertPrefixActionPerformed
    
   /**
    * if insert-prefix option is chosen,then 
    * insert text field will be enabled
    * so that user can give text
    * otherwise text field will disabled
    * @param evt 
    */
    private void prefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefixActionPerformed
        // TODO add your handling code here:
        if(prefix.isSelected())
         insertPrefix.setEditable(true);
        else
          insertPrefix.setEditable(false);
    }//GEN-LAST:event_prefixActionPerformed
     /**
    * if insert-suffix option is chosen,then 
    * insert text field will be enabled
    * so that user can give text
    * otherwise text field will disabled
    * @param evt 
    */
    private void suffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suffixActionPerformed
        // TODO add your handling code here:
        if(suffix.isSelected())
         insertSuffix.setEditable(true);
        else
          insertSuffix.setEditable(false);
    }//GEN-LAST:event_suffixActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChoosedFileFilter;
    private javax.swing.JMenuItem Out;
    private javax.swing.JButton apply;
    private javax.swing.JButton browse;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox dropdown;
    public javax.swing.JTextField insertPrefix;
    public javax.swing.JTextField insertSuffix;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JSpinner letterIncrement;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    public javax.swing.JSpinner numberIncrement;
    private javax.swing.JTextField opendir;
    private javax.swing.JMenu out;
    private javax.swing.JButton preView;
    public javax.swing.JCheckBox prefix;
    public javax.swing.JSpinner stepSize;
    public javax.swing.JCheckBox suffix;
    private javax.swing.JComboBox uniqueChoice;
    private javax.swing.JCheckBox uniqueParameter;
    // End of variables declaration//GEN-END:variables
}
